plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'org.openjfx.javafxplugin' version '0.0.11'
}

javafx {
    version = "17"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.base' ]
}

//apply plugin: 'war'

bootJar {
    duplicatesStrategy = 'exclude'
}

group = 'com.rickiey_innovates'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url  "https://jitpack.io"
    }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //implementation 'org.springframework.boot:spring-boot-starter-tomcat:3.0.4'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // https://mvnrepository.com/artifact/com.github.darrachequesne/spring-data-jpa-datatables
    implementation 'com.github.darrachequesne:spring-data-jpa-datatables:6.0.1'


    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'com.github.AfricasTalkingLtd.africastalking-java:core:3.4.9'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'net.sf.jasperreports:jasperreports:6.20.5'
    implementation 'ar.com.fdvs:DynamicJasper:5.3.8'
    implementation 'com.github.librepdf:openpdf:1.3.30'
    implementation 'org.codehaus.groovy:groovy:3.0.8'
    implementation group: 'org.apache.clerezza.ext', name: 'org.json.simple', version: '0.4'
    implementation 'org.openjfx:javafx-base:17'
    implementation 'org.openjfx:javafx-controls:17'
    implementation 'org.openjfx:javafx-fxml:17'
    implementation 'org.openjfx:javafx-graphics:17'
    implementation 'org.openjfx:javafx-media:17'
    implementation 'org.openjfx:javafx-swing:17'
    implementation 'org.openjfx:javafx-web:17'
    // https://mvnrepository.com/artifact/com.github.javafaker/javafaker
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'com.itextpdf:itextpdf:5.5.13.3'



// https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'


    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'com.mysql:mysql-connector-j:9.1.0'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
